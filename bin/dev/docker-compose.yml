version: '3'

services:
  postgres:
    container_name: postgres-db-p803
    image: postgres:13.0-alpine
    ports:
      - 5432:5432
    volumes:
      - ./pgdb:/var/lib/postgresql/data
    env_file: .env
    environment:
      - LC_ALL=C.UTF-8

  redis:
    container_name: redis
    image: redis:5
    restart: "on-failure"
    expose:
      - '6379'
    ports:
      - '6379:6379'
    volumes:
      - ./redisdb:/var/lib/redis

  celery: &celery
    container_name: celery
    build:
      context: .
      dockerfile: celery.dockerfile
    env_file: .env
    volumes:
      - ../../app:/app
    command: bash -c "cd /app/ && celery --app=core.celery:app worker -B --loglevel=INFO"
    depends_on:
      - web
      - redis
    links:
      - postgres
      - redis

  web:
    container_name: p803
    build: .
    restart: "always"
    env_file: .env
    volumes:
      - ../../app:/code
    ports:
      - "8000:8000"
    depends_on:
      - "postgres"
    command: bash -c " python /code/manage.py makemigrations --noinput && python /code/manage.py migrate && python /code/manage.py runserver 0.0.0.0:8000"