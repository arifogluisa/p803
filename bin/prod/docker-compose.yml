version: '3'

services:
  nginx-proxy:
    image: jwilder/nginx-proxy
    restart: "always"
    ports:
      - "80:80"
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ./nginx/vhost/:/etc/nginx/vhost.d:ro
      - ./nginx/conf.d/client_max_body_size.conf:/etc/nginx/conf.d/client_max_body_size.conf:ro
      - ./static/:/settings/static
      - ./media/:/settings/media
      - ./nginx/proxy.conf/:/etc/nginx/proxy.conf

  postgres:
    container_name:  postgres-db-p803
    image: postgres:13.0-alpine
    ports:
      - 5432:5432
    volumes:
      - ./pgdb:/var/lib/postgresql/data
    env_file: .env
    environment:
      - LC_ALL=C.UTF-8

  web:
    container_name: p803
    build: .
    restart: "always"
    env_file: .env
    volumes:
      - ../../app:/code
    ports:
      - "8000:8000"
    depends_on:
      - "postgres"
      # - "redis"

  # redis:
  #   build:
  #     context: .
  #     dockerfile: redis.dockerfile
  #   image: redis:5
  #   restart: "on-failure"
  #   container_name: redis
  #   ports:
  #     - "6379:6379"
  #   volumes:
  #     - ./redisdb:/var/lib/redis
  #   env_file: .env

  # celery: &celery
  #   container_name: celery
  #   build:
  #     context: .
  #     dockerfile: celery.dockerfile
  #   environment:
  #     - CELERY_BROKER_URL=redis://:dKqs72RhtaPPYyfN@redis:6379/0
  #   env_file: .env
  #   volumes:
  #     - ../../app:/app
  #   command: bash -c "cd /app/ && celery --app=core.celery:app worker -B --loglevel=INFO"
  #   depends_on:
  #     - web
  #     - redis
  #   links:
  #     - postgres
  #     - redis

networks:
  default:
    external:
      name: nginx-proxy